{"version":3,"sources":["components/navigation/navigation.jsx","constants/routes.jsx","components/navigation/index.jsx","components/footer/footer.jsx","components/footer/index.jsx","components/loading/index.jsx","components/loading/loading.jsx","app/paths.jsx","app/index.jsx","app/app.jsx","service-worker.js","index.js"],"names":["paths","value","path","Navigation","withRouter","_ref","pathname","history","location","react_default","a","createElement","className","map","item","index","Link","key","to","style","fontWeight","icons","icon","link","Footer","href","type","marginRight","Loading","component","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","App","BrowserRouter","components_navigation","Switch","Route","exact","components_footer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_app","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","worker"],"mappings":"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","file":"static/js/main.0f7d5018.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst paths = [\r\n  {\r\n    value: \"/\",\r\n    path: ROUTES.ROOT\r\n  },\r\n  {\r\n    value: \"projects\",\r\n    path: ROUTES.PROJECTS\r\n  },\r\n  {\r\n    value: \"others\",\r\n    path: ROUTES.OTHERS\r\n  },\r\n  {\r\n    value: \"About\",\r\n    path: ROUTES.ABOUT\r\n  }\r\n];\r\n\r\nconst Navigation = ({ history }) => {\r\n  const { pathname } = history.location;\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"menu\">\r\n        {paths.map((item, index) => (\r\n          <Link\r\n            key={index}\r\n            className=\"menu-items\"\r\n            to={item.path}\r\n            style={{ fontWeight: pathname === item.path ? \"bold\" : \"\" }}\r\n          >\r\n            {\" \"}\r\n            {item.value}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navigation);\r\n","export const ROOT = \"/\";\r\nexport const PROJECTS = \"/projects\";\r\nexport const OTHERS = \"/others\";\r\nexport const ABOUT = \"/about\";\r\n","import Navigation from \"./navigation\";\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport \"./footer.css\";\r\n\r\nconst icons = [\r\n  {\r\n    icon: \"twitter\",\r\n    link: \"https://twitter.com/0xura\"\r\n  },\r\n  {\r\n    icon: \"github\",\r\n    link: \"https://github.com/xura\"\r\n  },\r\n  {\r\n    icon: \"linkedin\",\r\n    link: \"https://linkedin.com/in/xura/\"\r\n  }\r\n];\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-container\">\r\n        {icons.map((item, index) => (\r\n          <a key={index} href={item.link} className=\"footer-links\">\r\n            <Icon type={item.icon} style={{ marginRight: 20 }} />\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from \"./footer\";\r\nexport default Footer;\r\n","import Loading from \"./loading\";\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\nimport \"./loading.css\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <Icon type=\"loading\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import Loading from \"../components/loading\";\r\nimport Loadable from \"react-loadable\";\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nconst paths = [\r\n  {\r\n    path: ROUTES.ROOT,\r\n    component: Loadable({\r\n      loader: () => import(\"../pages/landing\"),\r\n      loading: Loading\r\n    })\r\n  },\r\n  {\r\n    path: ROUTES.PROJECTS,\r\n    component: Loadable({\r\n      loader: () => import(\"../pages/landing\"),\r\n      loading: Loading\r\n    })\r\n  },\r\n  {\r\n    path: ROUTES.OTHERS,\r\n    component: Loadable({\r\n      loader: () => import(\"../pages/landing\"),\r\n      loading: Loading\r\n    })\r\n  },\r\n  {\r\n    path: ROUTES.ABOUT,\r\n    component: Loadable({\r\n      loader: () => import(\"../pages/landing\"),\r\n      loading: Loading\r\n    })\r\n  }\r\n];\r\n\r\nexport default paths;\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"../components/navigation\";\r\nimport Footer from \"../components/footer\";\r\nimport paths from \"./paths\";\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <div>\r\n      <Navigation />\r\n      <Switch>\r\n        {paths.map((item, index) => {\r\n          return <Route exact key={index} path={item.path} component={item.component} />;\r\n        })}\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (response.status === 404 || response.headers.get(\"content-type\").indexOf(\"javascript\") === -1) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport * as worker from \"./service-worker.js\";\r\nimport \"./styles/index.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nworker.register();\r\n"],"sourceRoot":""}